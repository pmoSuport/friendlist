{"version":3,"sources":["constants/Icons.js","containers/InteractiveList.js","containers/CustomTextField.js","mockData/friendList.js","util/index.js","containers/AlertDialog.js","components/TitleWithSearchBar.js","components/FriendsList.js","containers/AppBar.js","App.js","reportWebVitals.js","index.js"],"names":["Icons","StarBorderIcon","StarIcon","FaceIcon","DeleteIcon","PersonAddIcon","SearchIcon","AddIcon","CloseIcon","InteractiveList","props","classes","useStyles","Fragment","List","className","list","map","friend","ListItem","listItem","ListItemAvatar","Avatar","avatar","ListItemText","primary","name","secondary","ListItemSecondaryAction","IconButton","onClick","toggleFavorite","id","favorite","starIcon","delete","deleteIcon","length","makeStyles","theme","height","backgroundColor","marginBottom","padding","fontWeight","color","background","CustomTextField","defaultTheme","root","TextField","variant","size","value","margin","onChange","e","target","placeholder","onKeyPress","helperText","errorMsg","error","undefined","trim","InputProps","endAdornment","InputAdornment","position","onEndIconClick","endIcon","width","border","friendList","Utils","generateID","Math","floor","random","capitalizeName","replace","s","toUpperCase","sortList","fav","unfav","sort","a","b","localeCompare","forEach","item","push","filterList","filter","toLowerCase","includes","Transition","React","forwardRef","ref","Slide","direction","AlertDialog","Dialog","open","TransitionComponent","keepMounted","onClose","toggleDialoge","DialogContent","DialogContentText","dialogeMessage","DialogActions","showCancel","Button","handleOk","TitleWithSearchBar","titleWrapper","Typography","title","searchWrapper","showSearchBox","searchValue","search","clearSearch","enableSearch","searchButton","display","alignItems","justifyContent","whiteSpace","paddingRight","FriendsList","useState","friendsList","searchedText","newFriend","currentPage","openDialog","message","state","setState","useEffect","handleDelete","newList","ceil","handleAddNewFriend","indexOfLastName","indexOfFirstName","currentList","slice","count","Container","maxWidth","test","key","index","findIndex","Pagination","pagination","event","page","flexGrow","borderRadius","boxSizing","addButton","marginTop","logo","AppBar","Toolbar","disableGutters","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17e76c5d.chunk.js","sourcesContent":["import StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst Icons = {\r\n  StarBorderIcon,\r\n  StarIcon,\r\n  FaceIcon,\r\n  DeleteIcon,\r\n  PersonAddIcon,\r\n  SearchIcon,\r\n  AddIcon,\r\n  CloseIcon\r\n};\r\n\r\nexport default Icons;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Icons from '../constants/Icons'\r\n\r\nexport default function InteractiveList(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <List className={classes.list}>\r\n      {\r\n        props.list.map((friend) =>\r\n            <ListItem className={classes.listItem} key={friend.id}>\r\n              <ListItemAvatar>\r\n                <Avatar className={classes.avatar}>\r\n                  <Icons.FaceIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={friend.name}\r\n                secondary={'Is your friend'}\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton\r\n                  onClick={() => props.toggleFavorite(friend.id)}\r\n                >\r\n                  {\r\n                    friend.favorite\r\n                    ? <Icons.StarIcon className={classes.starIcon} />\r\n                    : <Icons.StarBorderIcon className={classes.starIcon} />\r\n                  }\r\n                </IconButton>\r\n                <IconButton onClick={() => props.delete(friend.id, friend.name)}>\r\n                  <Icons.DeleteIcon className={classes.deleteIcon}/>\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n      }\r\n      {\r\n        props.list.length === 0 && \"No Friends found...\"\r\n      }\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list:{\r\n    height: '320px'\r\n  },\r\n  listItem: {\r\n    backgroundColor: 'white',\r\n    marginBottom: '10px',\r\n    padding: '5px 10px',\r\n    '& .MuiListItemText-primary':{\r\n      fontWeight: 'bold'\r\n    }\r\n  },\r\n  starIcon:{\r\n    color: '#0066e5'\r\n  },\r\n  deleteIcon: {\r\n    color: '#e23232'\r\n  },\r\n  avatar: {\r\n    background: '#3066b0'\r\n  }\r\n}));","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nexport default function CustomTextField(props) {\r\n  const classes = defaultTheme();\r\n\r\n  const handleChange = e => {\r\n    props.onChange(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        name={props.name}\r\n        key={props.name}\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        value={props.value}\r\n        margin=\"dense\"\r\n        onChange={handleChange}\r\n        placeholder={props.placeholder}\r\n        onKeyPress={props.onKeyPress}\r\n        helperText={props.errorMsg}\r\n        error={props.errorMsg !== undefined && props.errorMsg.trim() !== ''}\r\n        InputProps={{\r\n          endAdornment:\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                onClick={props.onEndIconClick}\r\n                size='small'\r\n              >\r\n                {props.endIcon}\r\n              </IconButton>\r\n            </InputAdornment>\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst defaultTheme = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: 0,\r\n      // marginBottom: '10px',\r\n      width: '100%',\r\n      '& .MuiFormHelperText-contained': {\r\n        margin: '0 5px'\r\n      }\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-error .MuiOutlinedInput-notchedOutline ': {\r\n      border: '1px solid rgba(0, 0, 0, 0.23)',\r\n    },\r\n    '&:hover .MuiOutlinedInput-root.Mui-error .MuiOutlinedInput-notchedOutline ': {\r\n      border: '1px solid rgba(0, 0, 0, 0.23)',\r\n    },\r\n    '& .MuiFormLabel-root.Mui-error': {\r\n      color: 'rgba(0, 0, 0, 0.54)'\r\n    }\r\n  },\r\n}));","const friendList = [\r\n    {\r\n      id: '1',\r\n      name: 'MS Dhoni',\r\n      favorite: false\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Virat Kohli',\r\n      favorite: false\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Rohit Sharma',\r\n      favorite: false\r\n    },\r\n    {\r\n      id: '4',\r\n      name: 'Surya Kumar',\r\n      favorite: false\r\n    },\r\n    {\r\n      id: '5',\r\n      name: 'Rishabh Pant',\r\n      favorite: false\r\n    },\r\n    {\r\n      id: '6',\r\n      name: 'Hardik Pandya',\r\n      favorite: false\r\n    },\r\n    {\r\n      id: '7',\r\n      name: 'Jasprit Bumrah',\r\n      favorite: false \r\n    },\r\n  ];\r\n  \r\n  export default friendList;","const generateID = () => Math.floor(Math.random() * 10000);\r\n\r\nconst capitalizeName = name => name.replace(/\\b(\\w)/g, s => s.toUpperCase());\r\n\r\nconst sortList = list => {\r\n  let fav = [], unfav = [];\r\n  list.sort((a, b) => a.name.localeCompare(b.name))\r\n  list.forEach(item => {\r\n    if (item.favorite)\r\n      fav.push(item);\r\n    else\r\n      unfav.push(item);\r\n  });\r\n\r\n  return [...fav, ...unfav];\r\n}\r\n\r\nconst filterList = (name, list) => {\r\n  if (name && name.trim() !== '') {\r\n    return list.filter(friend =>\r\n      friend.name.toLowerCase().includes(name.toLowerCase())\r\n    );\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nconst Utils = {\r\n  generateID,\r\n  capitalizeName,\r\n  sortList,\r\n  filterList\r\n}\r\n\r\nexport default Utils\r\n","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={props.toggleDialoge}\r\n    >\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          {props.dialogeMessage}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {\r\n          props.showCancel\r\n            ? <React.Fragment>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={props.handleOk}\r\n              >\r\n                Ok\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                onClick={props.toggleDialoge}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </React.Fragment>\r\n            : <Button\r\n              color=\"primary\"\r\n              onClick={props.toggleDialoge}\r\n            >\r\n              Ok\r\n            </Button>\r\n        }\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Icons from '../constants/Icons'\r\nimport CustomTextField from '../containers/CustomTextField'\r\n\r\nexport default function TitleWithSearchBar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.titleWrapper}>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n        Friends List\r\n      </Typography>\r\n      <div className={classes.searchWrapper}>\r\n        {\r\n          props.showSearchBox\r\n            ? <CustomTextField\r\n              name='addFriend'\r\n              value={props.searchValue}\r\n              onChange={props.search}\r\n              placeholder=\"Search\"\r\n              endIcon={<Icons.CloseIcon />}\r\n              onEndIconClick={props.clearSearch}\r\n            />\r\n            : <IconButton size='small' onClick={props.enableSearch}>\r\n              <Icons.SearchIcon className={classes.searchButton} />\r\n            </IconButton>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  titleWrapper: {\r\n    display: 'flex',\r\n    marginBottom: '10px',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    margin: 0,\r\n    height: '40px'\r\n  },\r\n  title: {\r\n    whiteSpace: 'nowrap',\r\n    paddingRight: '10px'\r\n  },\r\n  searchButton: {\r\n    color: 'black'\r\n  },\r\n  searchWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n}));","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport Icons from '../constants/Icons'\r\nimport InteractiveList from '../containers/InteractiveList'\r\nimport CustomTextField from '../containers/CustomTextField'\r\nimport friendList from '../mockData/friendList'\r\nimport Utils from '../util'\r\nimport AlertDialog from '../containers/AlertDialog'\r\nimport TitleWithSearchBar from './TitleWithSearchBar'\r\n\r\nexport default function FriendsList() {\r\n\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    friendsList: [],\r\n    searchedText: '',\r\n    showSearchBox: false,\r\n    newFriend: '',\r\n    currentPage: 1,\r\n    error: ' ',\r\n    openDialog: false,\r\n    message: \"\",\r\n    handleOk: () => { },\r\n    showCancel: false,\r\n  });\r\n\r\n  const toggleDialoge = () => {\r\n    setState({ ...state, openDialog: !state.openDialog });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setState({\r\n      ...state,\r\n      friendsList: Utils.sortList(friendList)\r\n    });\r\n  }, []);\r\n\r\n  const showDeleteWarning = (id, name) => {\r\n    setState({\r\n      ...state,\r\n      openDialog: true,\r\n      message: 'Are you sure you want to delete your friend ' + Utils.capitalizeName(name) + '.',\r\n      showCancel: true,\r\n      handleOk: () => { handleDelete(id) },\r\n    });\r\n  }\r\n\r\n  const handleDelete = id => {\r\n    let newList = state.friendsList.filter(friend => friend.id !== id);\r\n    let currentPage = state.currentPage;\r\n\r\n    if (state.currentPage > Math.ceil((newList.length) / 4)) {\r\n      currentPage = Math.ceil((newList.length) / 4)\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      currentPage: currentPage,\r\n      friendsList: newList\r\n    });\r\n  }\r\n\r\n  const toggleFavorite = (id) => {\r\n    let newList = [...state.friendsList];\r\n    \r\n    let index = state.friendsList.findIndex(friend => friend.id === id);\r\n    if(index > -1) newList[index] = { ...newList[index], favorite: !newList[index].favorite }\r\n\r\n    setState({\r\n      ...state,\r\n      friendsList: Utils.sortList(newList),\r\n    });\r\n  }\r\n\r\n  const handleNameChange = name => {\r\n    let error = ' ';\r\n\r\n    if (name.trim() !== '' && !/^[a-zA-Z ]*$/.test(name)) {\r\n      error = 'Name can consists of alphabets only.'\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      error: error,\r\n      newFriend: name\r\n    });\r\n  }\r\n\r\n  const handleAddNewFriend = () => {\r\n    let error = ''\r\n    if (state.newFriend.trim() === '') {\r\n      error = 'Please enter a name.'\r\n    } else if (state.newFriend.length < 3) {\r\n      error = 'Name should be of atleast 3 characters'\r\n    }\r\n\r\n    if (error === '') {\r\n      let newList = [...state.friendsList];\r\n      newList.push({ id: Utils.generateID(), name: Utils.capitalizeName(state.newFriend), favorite: false });\r\n\r\n      setState({\r\n        ...state,\r\n        newFriend: '',\r\n        error: ' ',\r\n        friendsList: Utils.sortList(newList),\r\n        openDialog: true,\r\n        message: 'Your friend ' + Utils.capitalizeName(state.newFriend) + ' added successfully.',\r\n        showCancel: false\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        error: error\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleEnter = (e) => {\r\n    if (e.key === 'Enter' && state.error.trim() === '') {\r\n      handleAddNewFriend();\r\n    }\r\n  }\r\n\r\n  const handleSearch = (name) => {\r\n    setState({\r\n      ...state,\r\n      searchedText: name,\r\n    });\r\n  }\r\n\r\n  const handleClearSearch = () => {\r\n    setState({\r\n      ...state,\r\n      searchedText: '',\r\n      showSearchBox: false\r\n    });\r\n  }\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setState({\r\n      ...state,\r\n      currentPage: value\r\n    });\r\n  };\r\n\r\n  const handleEnableSearch = () => setState({ ...state, showSearchBox: true });\r\n\r\n  let list = state.searchedText.trim() !== '' ? Utils.filterList(state.searchedText, state.friendsList) : state.friendsList,\r\n    indexOfLastName = state.currentPage * 4,\r\n    indexOfFirstName = indexOfLastName - 4,\r\n    currentList = list.slice(indexOfFirstName, indexOfLastName),\r\n    count = Math.ceil((list.length) / 4);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container maxWidth=\"md\">\r\n        <TitleWithSearchBar\r\n          showSearchBox={state.showSearchBox}\r\n          searchValue={state.searchedText}\r\n          search={handleSearch}\r\n          clearSearch={handleClearSearch}\r\n          enableSearch={handleEnableSearch}\r\n        />\r\n        <CustomTextField\r\n          name='addFriend'\r\n          value={state.newFriend}\r\n          onChange={handleNameChange}\r\n          onKeyPress={handleEnter}\r\n          placeholder=\"Enter your friend's name\"\r\n          endIcon={<Icons.AddIcon />}\r\n          onEndIconClick={handleAddNewFriend}\r\n          errorMsg={state.error}\r\n        />\r\n        <InteractiveList\r\n          list={currentList}\r\n          delete={showDeleteWarning}\r\n          toggleFavorite={toggleFavorite}\r\n        />\r\n        {\r\n          count > 1\r\n          && <Pagination\r\n            className={classes.pagination}\r\n            count={count}\r\n            color=\"primary\"\r\n            onChange={handlePageChange}\r\n            page={state.currentPage}\r\n          />\r\n        }\r\n      </Container>\r\n      <AlertDialog\r\n        toggleDialoge={toggleDialoge}\r\n        open={state.openDialog}\r\n        dialogeMessage={state.message}\r\n        handleOk={state.handleOk}\r\n        showCancel={state.showCancel}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: '20px 0',\r\n    border: '5px solid black',\r\n    borderRadius: '20px',\r\n    boxSizing: 'border-box',\r\n    margin:'0 180px',\r\n    padding: '20px 0'\r\n  },\r\n  addButton: {\r\n    color: '#1976d2',\r\n  },\r\n  pagination: {\r\n    marginTop: '20px',\r\n    '& .MuiPagination-ul': {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\n\r\nfunction AppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters={true}>\r\n        </Toolbar>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: 'white'\r\n  },\r\n  logo: {\r\n    width: '100px'\r\n  }\r\n}));\r\n\r\nexport default AppBar;","import FriendsList from './components/FriendsList';\nimport AppBar from './containers/AppBar';\n\nfunction App() {\n  return (\n    <div className='appWrapper'>\n      <AppBar/>\n      <FriendsList/>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}